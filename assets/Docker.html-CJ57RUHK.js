import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as i,o as l,c as r,b as a,e as s,f as e,d as t}from"./app-MKeCReKH.js";const c={},p=t('<h1 id="docker" tabindex="-1"><a class="header-anchor" href="#docker"><span>Docker</span></a></h1><h2 id="tips" tabindex="-1"><a class="header-anchor" href="#tips"><span>Tips</span></a></h2><h3 id="docker-容器内走代理" tabindex="-1"><a class="header-anchor" href="#docker-容器内走代理"><span>Docker 容器内走代理</span></a></h3>',3),d={href:"https://kebingzao.com/2019/02/22/docker-container-proxy/",target:"_blank",rel:"noopener noreferrer"},u=t(`<p>Docker版本17.06以上</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">vim</span> ~/.docker/config.json
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>加入</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
	<span class="token property">&quot;proxies&quot;</span><span class="token operator">:</span>
	<span class="token punctuation">{</span>
	   <span class="token property">&quot;default&quot;</span><span class="token operator">:</span>
	   <span class="token punctuation">{</span>
	     <span class="token property">&quot;httpProxy&quot;</span><span class="token operator">:</span> <span class="token string">&quot;http://127.0.0.1:8118&quot;</span><span class="token punctuation">,</span>
	     <span class="token property">&quot;httpsProxy&quot;</span><span class="token operator">:</span> <span class="token string">&quot;http://127.0.0.1:8118&quot;</span><span class="token punctuation">,</span>
	     <span class="token property">&quot;noProxy&quot;</span><span class="token operator">:</span> <span class="token string">&quot;localhost&quot;</span>
	   <span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),k={href:"https://blog.csdn.net/JerryITGO/article/details/105785714",target:"_blank",rel:"noopener noreferrer"},v=t(`<div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 将当前用户添加到docker组</span>
<span class="token function">sudo</span> <span class="token function">usermod</span> <span class="token parameter variable">-aG</span> <span class="token function">docker</span> <span class="token environment constant">$USER</span>
或
<span class="token function">sudo</span> gpasswd <span class="token parameter variable">-a</span> <span class="token environment constant">$USER</span> <span class="token function">docker</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>重启Docker</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> systemctl restart <span class="token function">docker</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>设置目录及其所有文件的权限</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">chown</span> <span class="token environment constant">$USER</span>:docker /home/<span class="token environment constant">$USER</span>/.docker <span class="token parameter variable">-R</span>

<span class="token function">sudo</span> <span class="token function">chmod</span> g+rwx /home/<span class="token environment constant">$USER</span>/.docker <span class="token parameter variable">-R</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>重新创建docker容器··</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">docker</span> run <span class="token parameter variable">-it</span> <span class="token parameter variable">--net</span> <span class="token function">host</span> ubuntu-vim:20.04 /bin/bash
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>取消代理，进入容器，修改http的地址就行。。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">docker</span> start <span class="token punctuation">..</span>.
<span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> <span class="token punctuation">..</span>. /bin/bash
<span class="token function">vim</span> ~/.bashrc 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="docker-运行rosrviz-可视化" tabindex="-1"><a class="header-anchor" href="#docker-运行rosrviz-可视化"><span>Docker 运行ROSrviz 可视化</span></a></h3>`,10),m={href:"http://wiki.ros.org/docker/Tutorials/Hardware%20Acceleration#nvidia-docker1",target:"_blank",rel:"noopener noreferrer"},h={href:"https://blog.csdn.net/sinat_37141443/article/details/115461863",target:"_blank",rel:"noopener noreferrer"},b={href:"https://blog.csdn.net/qq_40695642/article/details/117607446?utm_medium=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~default-6.control&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~default-6.control",target:"_blank",rel:"noopener noreferrer"},g=t(`<p>First create a directory with a Dockerfile and entrypoint script inside.</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">mkdir</span> my_melodic_image <span class="token operator">&amp;</span> <span class="token builtin class-name">cd</span> my_melodic_image
<span class="token function">touch</span> Dockerfile
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Paste the following content into the Dockerfile.</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>FROM osrf/ros:melodic-desktop-full

<span class="token comment"># nvidia-container-runtime</span>
ENV NVIDIA_VISIBLE_DEVICES <span class="token punctuation">\\</span>
    <span class="token variable">\${NVIDIA_VISIBLE_DEVICES<span class="token operator">:-</span>all}</span>
ENV NVIDIA_DRIVER_CAPABILITIES <span class="token punctuation">\\</span>
    <span class="token variable">\${NVIDIA_DRIVER_CAPABILITIES<span class="token operator">:+</span>$NVIDIA_DRIVER_CAPABILITIES<span class="token operator">,</span>}</span>graphics
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Build the image. Don&#39;t forget the period at the end of that command.</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> my_melodic_image/
<span class="token function">docker</span> build <span class="token parameter variable">-t</span> my_melodic_image <span class="token builtin class-name">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Now create a script to run the image called run_my_image.bash</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token assign-left variable">XAUTH</span><span class="token operator">=</span>/tmp/.docker.xauth
<span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token operator">!</span> <span class="token parameter variable">-f</span> <span class="token variable">$XAUTH</span> <span class="token punctuation">]</span>
<span class="token keyword">then</span>
    <span class="token assign-left variable">xauth_list</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span>xauth nlist :0 <span class="token operator">|</span> <span class="token function">sed</span> <span class="token parameter variable">-e</span> <span class="token string">&#39;s/^..../ffff/&#39;</span><span class="token variable">)</span></span>
    <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token operator">!</span> <span class="token parameter variable">-z</span> <span class="token string">&quot;<span class="token variable">$xauth_list</span>&quot;</span> <span class="token punctuation">]</span>
    <span class="token keyword">then</span>
        <span class="token builtin class-name">echo</span> <span class="token variable">$xauth_list</span> <span class="token operator">|</span> xauth <span class="token parameter variable">-f</span> <span class="token variable">$XAUTH</span> nmerge -
    <span class="token keyword">else</span>
        <span class="token function">touch</span> <span class="token variable">$XAUTH</span>
    <span class="token keyword">fi</span>
    <span class="token function">chmod</span> a+r <span class="token variable">$XAUTH</span>
<span class="token keyword">fi</span>

<span class="token function">docker</span> run <span class="token parameter variable">-it</span> <span class="token punctuation">\\</span>
    <span class="token parameter variable">--env</span><span class="token operator">=</span><span class="token string">&quot;DISPLAY=<span class="token environment constant">$DISPLAY</span>&quot;</span> <span class="token punctuation">\\</span>
    <span class="token parameter variable">--env</span><span class="token operator">=</span><span class="token string">&quot;QT_X11_NO_MITSHM=1&quot;</span> <span class="token punctuation">\\</span>
    <span class="token parameter variable">--volume</span><span class="token operator">=</span><span class="token string">&quot;/tmp/.X11-unix:/tmp/.X11-unix:rw&quot;</span> <span class="token punctuation">\\</span>
    <span class="token parameter variable">--env</span><span class="token operator">=</span><span class="token string">&quot;XAUTHORITY=<span class="token variable">$XAUTH</span>&quot;</span> <span class="token punctuation">\\</span>
    <span class="token parameter variable">--volume</span><span class="token operator">=</span><span class="token string">&quot;<span class="token variable">$XAUTH</span>:<span class="token variable">$XAUTH</span>&quot;</span> <span class="token punctuation">\\</span>
    <span class="token parameter variable">--runtime</span><span class="token operator">=</span>nvidia <span class="token punctuation">\\</span>
    my_melodic_image <span class="token punctuation">\\</span>
    <span class="token function">bash</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>docker run 换行结尾不能有空格。。。。不然就无法识别。。。。</p><p>Make the script executable</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">chmod</span> a+x run_my_image.bash
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Execute the script</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>./run_my_image.bash
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>roscore <span class="token operator">&gt;</span> /dev/null <span class="token operator">&amp;</span> rosrun rviz rviz
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="解决容器挂载文件权限问题" tabindex="-1"><a class="header-anchor" href="#解决容器挂载文件权限问题"><span>解决容器挂载文件权限问题</span></a></h3>`,15),f={href:"https://www.jianshu.com/p/83d787d50b61",target:"_blank",rel:"noopener noreferrer"},_=a("p",null,"在主机中添加的文件，在容器中可以进行修改。。并且权限还是主机的权限。。",-1),x=a("p",null,"在容器中添加的文件，在主机中就需要在root超级用户下才能修改。",-1),D={href:"https://blog.csdn.net/qq_41996454/article/details/109689314",target:"_blank",rel:"noopener noreferrer"},I=t(`<div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">chmod</span> <span class="token parameter variable">-R</span> <span class="token number">777</span> 文件夹
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="docker-删除镜像依赖关系" tabindex="-1"><a class="header-anchor" href="#docker-删除镜像依赖关系"><span>Docker 删除镜像依赖关系</span></a></h3><p>在Docker中，镜像之间存在一种层次结构，其中父镜像和子镜像之间可以共享相同的文件层。这个层次结构被称为“联合文件系统”（Union File System）。这意味着子镜像可以构建在一个父镜像的基础之上，并且可以共享相同的文件层，从而节省磁盘空间。</p><p>当你创建一个新的镜像时，它会在已有的镜像层次结构上添加新的层，这些新层包含了你在Dockerfile中定义的改变（例如添加文件、修改文件等）。这些新层不会复制整个文件系统，而是只存储相应的差异。</p><p>因此，当你删除一个父镜像时，如果存在以该父镜像为基础的子镜像，这些子镜像会依赖于父镜像的某些层。这可能会导致你无法直接删除父镜像，因为删除父镜像的同时会破坏子镜像的依赖关系。</p><p>要想删除一个父镜像，你可能需要先删除依赖于该父镜像的子镜像，然后再删除父镜像。这确保了Docker镜像层次结构的完整性，同时也确保了子镜像可以继续正常运行。</p><p>总结起来，Docker镜像之间共享相同的文件层，父子镜像的层次结构是分开计算空间的，但是子镜像可能会依赖于父镜像的层，因此删除父镜像需要注意依赖关系。</p><p>所以，想要删除有依赖关系的镜像应该只能将镜像保存下来重新load。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">docker</span> commit my_workspace ubuntu-desktop:20.04-cu11.0.3
<span class="token function">docker</span> save <span class="token parameter variable">-o</span> ubuntu-desktop.tar ubuntu-desktop:20.04-cu11.0.3
<span class="token function">docker</span> load <span class="token parameter variable">-i</span> ubuntu-desktop.tar 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="docker-挂载usb" tabindex="-1"><a class="header-anchor" href="#docker-挂载usb"><span>Docker 挂载USB</span></a></h3><p>直接加这两句，可以热插拔。。。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token parameter variable">--privileged</span><span class="token operator">=</span>true <span class="token parameter variable">-v</span> /dev:/dev
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="docker-push-上传镜像" tabindex="-1"><a class="header-anchor" href="#docker-push-上传镜像"><span>Docker push 上传镜像</span></a></h3>`,13),y={href:"https://blog.csdn.net/lxy___/article/details/105821141",target:"_blank",rel:"noopener noreferrer"},q=t(`<div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">docker</span> login
<span class="token function">docker</span> tag XX:v1 username/XX:v1
<span class="token function">docker</span> push username/XX:v1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="docker-卸载" tabindex="-1"><a class="header-anchor" href="#docker-卸载"><span>Docker 卸载</span></a></h3><h4 id="linux" tabindex="-1"><a class="header-anchor" href="#linux"><span>Linux</span></a></h4>`,3),T={href:"https://docs.docker.com/engine/install/ubuntu/#uninstall-docker-engine",target:"_blank",rel:"noopener noreferrer"},S=t(`<div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt-get</span> purge docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin docker-ce-rootless-extras
<span class="token function">sudo</span> <span class="token function">rm</span> <span class="token parameter variable">-rf</span> /var/lib/docker
<span class="token function">sudo</span> <span class="token function">rm</span> <span class="token parameter variable">-rf</span> /var/lib/containerd
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1);function E(A,R){const n=i("ExternalLinkIcon");return l(),r("div",null,[p,a("p",null,[a("a",d,[s("docker 容器内使用宿主机的代理配置 | Zach Ke's Notes"),e(n)])]),u,a("p",null,[s("可能会遇到 Docker:Error loading config file 这个问题 "),a("a",k,[s("Docker:Error loading config file_Regin WONG的博客-CSDN博客"),e(n)])]),v,a("p",null,[a("a",m,[s("docker/Tutorials/Hardware Acceleration - ROS Wiki"),e(n)])]),a("p",null,[a("a",h,[s("docker中使用cuda、opengl、ros，支持rviz可视化_Vincent_PHY的博客-CSDN博客_cuda+opengl docker images"),e(n)])]),a("p",null,[a("a",b,[s("Docker内运行ROS(melodic版本)以及使用Rviz_冷色调的夏天的博客-CSDN博客_docker ros"),e(n)])]),g,a("p",null,[s("当把容器中的文件拷贝到主机时，复制出来的文件权限是root。。 "),a("a",f,[s("解决 Docker 数据卷挂载的文件权限问题 - 简书"),e(n)])]),_,x,a("p",null,[s("或者用chmod修改权限 "),a("a",D,[s("linux修改文件夹下所有文件的权限"),e(n)])]),I,a("p",null,[a("a",y,[s("Docker镜像推送（push）到Docker Hub"),e(n)])]),q,a("p",null,[a("a",T,[s("Install Docker Engine on Ubuntu | Docker Docs"),e(n)])]),S])}const V=o(c,[["render",E],["__file","Docker.html.vue"]]),$=JSON.parse(`{"path":"/docs/tools/Docker.html","title":"Docker","lang":"zh-CN","frontmatter":{"date":"2024-04-02T00:00:00.000Z","category":["Tools"],"tags":["Tools"]},"headers":[{"level":2,"title":"Tips","slug":"tips","link":"#tips","children":[{"level":3,"title":"Docker 容器内走代理","slug":"docker-容器内走代理","link":"#docker-容器内走代理","children":[]},{"level":3,"title":"Docker 运行ROSrviz 可视化","slug":"docker-运行rosrviz-可视化","link":"#docker-运行rosrviz-可视化","children":[]},{"level":3,"title":"解决容器挂载文件权限问题","slug":"解决容器挂载文件权限问题","link":"#解决容器挂载文件权限问题","children":[]},{"level":3,"title":"Docker 删除镜像依赖关系","slug":"docker-删除镜像依赖关系","link":"#docker-删除镜像依赖关系","children":[]},{"level":3,"title":"Docker 挂载USB","slug":"docker-挂载usb","link":"#docker-挂载usb","children":[]},{"level":3,"title":"Docker push 上传镜像","slug":"docker-push-上传镜像","link":"#docker-push-上传镜像","children":[]},{"level":3,"title":"Docker 卸载","slug":"docker-卸载","link":"#docker-卸载","children":[]}]}],"git":{"createdTime":1712065888000,"updatedTime":1712847140000,"contributors":[{"name":"YLRK","email":"ylrk@outlook.com","commits":3}]},"readingTime":{"minutes":3.82,"words":1145},"filePathRelative":"docs/tools/Docker.md","localizedDate":"2024年4月2日","excerpt":"\\n<h2>Tips</h2>\\n<h3>Docker 容器内走代理</h3>\\n<p><a href=\\"https://kebingzao.com/2019/02/22/docker-container-proxy/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">docker 容器内使用宿主机的代理配置 | Zach Ke's Notes</a></p>\\n<p>Docker版本17.06以上</p>\\n<div class=\\"language-bash\\" data-ext=\\"sh\\" data-title=\\"sh\\"><pre class=\\"language-bash\\"><code><span class=\\"token function\\">vim</span> ~/.docker/config.json\\n</code></pre></div>"}`);export{V as comp,$ as data};
